/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TabsExampleImport } from './routes/tabs-example'
import { Route as MrtExampleImport } from './routes/mrt-example'
import { Route as MaskedInputExampleImport } from './routes/masked-input-example'
import { Route as FormExampleImport } from './routes/form-example'
import { Route as DialogsExampleImport } from './routes/dialogs-example'
import { Route as IndexImport } from './routes/index'
import { Route as TabsExampleIndexImport } from './routes/tabs-example/index'
import { Route as TabsExampleTab2Import } from './routes/tabs-example/tab2'
import { Route as TabsExampleTab1Import } from './routes/tabs-example/tab1'

// Create/Update Routes

const TabsExampleRoute = TabsExampleImport.update({
  id: '/tabs-example',
  path: '/tabs-example',
  getParentRoute: () => rootRoute,
} as any)

const MrtExampleRoute = MrtExampleImport.update({
  id: '/mrt-example',
  path: '/mrt-example',
  getParentRoute: () => rootRoute,
} as any)

const MaskedInputExampleRoute = MaskedInputExampleImport.update({
  id: '/masked-input-example',
  path: '/masked-input-example',
  getParentRoute: () => rootRoute,
} as any)

const FormExampleRoute = FormExampleImport.update({
  id: '/form-example',
  path: '/form-example',
  getParentRoute: () => rootRoute,
} as any)

const DialogsExampleRoute = DialogsExampleImport.update({
  id: '/dialogs-example',
  path: '/dialogs-example',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TabsExampleIndexRoute = TabsExampleIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TabsExampleRoute,
} as any)

const TabsExampleTab2Route = TabsExampleTab2Import.update({
  id: '/tab2',
  path: '/tab2',
  getParentRoute: () => TabsExampleRoute,
} as any)

const TabsExampleTab1Route = TabsExampleTab1Import.update({
  id: '/tab1',
  path: '/tab1',
  getParentRoute: () => TabsExampleRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dialogs-example': {
      id: '/dialogs-example'
      path: '/dialogs-example'
      fullPath: '/dialogs-example'
      preLoaderRoute: typeof DialogsExampleImport
      parentRoute: typeof rootRoute
    }
    '/form-example': {
      id: '/form-example'
      path: '/form-example'
      fullPath: '/form-example'
      preLoaderRoute: typeof FormExampleImport
      parentRoute: typeof rootRoute
    }
    '/masked-input-example': {
      id: '/masked-input-example'
      path: '/masked-input-example'
      fullPath: '/masked-input-example'
      preLoaderRoute: typeof MaskedInputExampleImport
      parentRoute: typeof rootRoute
    }
    '/mrt-example': {
      id: '/mrt-example'
      path: '/mrt-example'
      fullPath: '/mrt-example'
      preLoaderRoute: typeof MrtExampleImport
      parentRoute: typeof rootRoute
    }
    '/tabs-example': {
      id: '/tabs-example'
      path: '/tabs-example'
      fullPath: '/tabs-example'
      preLoaderRoute: typeof TabsExampleImport
      parentRoute: typeof rootRoute
    }
    '/tabs-example/tab1': {
      id: '/tabs-example/tab1'
      path: '/tab1'
      fullPath: '/tabs-example/tab1'
      preLoaderRoute: typeof TabsExampleTab1Import
      parentRoute: typeof TabsExampleImport
    }
    '/tabs-example/tab2': {
      id: '/tabs-example/tab2'
      path: '/tab2'
      fullPath: '/tabs-example/tab2'
      preLoaderRoute: typeof TabsExampleTab2Import
      parentRoute: typeof TabsExampleImport
    }
    '/tabs-example/': {
      id: '/tabs-example/'
      path: '/'
      fullPath: '/tabs-example/'
      preLoaderRoute: typeof TabsExampleIndexImport
      parentRoute: typeof TabsExampleImport
    }
  }
}

// Create and export the route tree

interface TabsExampleRouteChildren {
  TabsExampleTab1Route: typeof TabsExampleTab1Route
  TabsExampleTab2Route: typeof TabsExampleTab2Route
  TabsExampleIndexRoute: typeof TabsExampleIndexRoute
}

const TabsExampleRouteChildren: TabsExampleRouteChildren = {
  TabsExampleTab1Route: TabsExampleTab1Route,
  TabsExampleTab2Route: TabsExampleTab2Route,
  TabsExampleIndexRoute: TabsExampleIndexRoute,
}

const TabsExampleRouteWithChildren = TabsExampleRoute._addFileChildren(
  TabsExampleRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dialogs-example': typeof DialogsExampleRoute
  '/form-example': typeof FormExampleRoute
  '/masked-input-example': typeof MaskedInputExampleRoute
  '/mrt-example': typeof MrtExampleRoute
  '/tabs-example': typeof TabsExampleRouteWithChildren
  '/tabs-example/tab1': typeof TabsExampleTab1Route
  '/tabs-example/tab2': typeof TabsExampleTab2Route
  '/tabs-example/': typeof TabsExampleIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dialogs-example': typeof DialogsExampleRoute
  '/form-example': typeof FormExampleRoute
  '/masked-input-example': typeof MaskedInputExampleRoute
  '/mrt-example': typeof MrtExampleRoute
  '/tabs-example/tab1': typeof TabsExampleTab1Route
  '/tabs-example/tab2': typeof TabsExampleTab2Route
  '/tabs-example': typeof TabsExampleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dialogs-example': typeof DialogsExampleRoute
  '/form-example': typeof FormExampleRoute
  '/masked-input-example': typeof MaskedInputExampleRoute
  '/mrt-example': typeof MrtExampleRoute
  '/tabs-example': typeof TabsExampleRouteWithChildren
  '/tabs-example/tab1': typeof TabsExampleTab1Route
  '/tabs-example/tab2': typeof TabsExampleTab2Route
  '/tabs-example/': typeof TabsExampleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dialogs-example'
    | '/form-example'
    | '/masked-input-example'
    | '/mrt-example'
    | '/tabs-example'
    | '/tabs-example/tab1'
    | '/tabs-example/tab2'
    | '/tabs-example/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dialogs-example'
    | '/form-example'
    | '/masked-input-example'
    | '/mrt-example'
    | '/tabs-example/tab1'
    | '/tabs-example/tab2'
    | '/tabs-example'
  id:
    | '__root__'
    | '/'
    | '/dialogs-example'
    | '/form-example'
    | '/masked-input-example'
    | '/mrt-example'
    | '/tabs-example'
    | '/tabs-example/tab1'
    | '/tabs-example/tab2'
    | '/tabs-example/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DialogsExampleRoute: typeof DialogsExampleRoute
  FormExampleRoute: typeof FormExampleRoute
  MaskedInputExampleRoute: typeof MaskedInputExampleRoute
  MrtExampleRoute: typeof MrtExampleRoute
  TabsExampleRoute: typeof TabsExampleRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DialogsExampleRoute: DialogsExampleRoute,
  FormExampleRoute: FormExampleRoute,
  MaskedInputExampleRoute: MaskedInputExampleRoute,
  MrtExampleRoute: MrtExampleRoute,
  TabsExampleRoute: TabsExampleRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dialogs-example",
        "/form-example",
        "/masked-input-example",
        "/mrt-example",
        "/tabs-example"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dialogs-example": {
      "filePath": "dialogs-example.tsx"
    },
    "/form-example": {
      "filePath": "form-example.tsx"
    },
    "/masked-input-example": {
      "filePath": "masked-input-example.tsx"
    },
    "/mrt-example": {
      "filePath": "mrt-example.tsx"
    },
    "/tabs-example": {
      "filePath": "tabs-example.tsx",
      "children": [
        "/tabs-example/tab1",
        "/tabs-example/tab2",
        "/tabs-example/"
      ]
    },
    "/tabs-example/tab1": {
      "filePath": "tabs-example/tab1.tsx",
      "parent": "/tabs-example"
    },
    "/tabs-example/tab2": {
      "filePath": "tabs-example/tab2.tsx",
      "parent": "/tabs-example"
    },
    "/tabs-example/": {
      "filePath": "tabs-example/index.tsx",
      "parent": "/tabs-example"
    }
  }
}
ROUTE_MANIFEST_END */
