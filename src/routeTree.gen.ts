/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TabsExampleRouteImport } from './routes/tabs-example'
import { Route as MrtExampleRouteImport } from './routes/mrt-example'
import { Route as MaskedInputExampleRouteImport } from './routes/masked-input-example'
import { Route as FormExampleRouteImport } from './routes/form-example'
import { Route as DialogsExampleRouteImport } from './routes/dialogs-example'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TabsExampleIndexRouteImport } from './routes/tabs-example/index'
import { Route as TabsExampleTab3RouteImport } from './routes/tabs-example/tab3'
import { Route as TabsExampleTab2RouteImport } from './routes/tabs-example/tab2'
import { Route as TabsExampleTab1RouteImport } from './routes/tabs-example/tab1'
import { Route as TabsExampleTab3ListRouteImport } from './routes/tabs-example/tab3/list'
import { Route as TabsExampleTab3IdRouteImport } from './routes/tabs-example/tab3/$id'

const TabsExampleRoute = TabsExampleRouteImport.update({
  id: '/tabs-example',
  path: '/tabs-example',
  getParentRoute: () => rootRouteImport,
} as any)
const MrtExampleRoute = MrtExampleRouteImport.update({
  id: '/mrt-example',
  path: '/mrt-example',
  getParentRoute: () => rootRouteImport,
} as any)
const MaskedInputExampleRoute = MaskedInputExampleRouteImport.update({
  id: '/masked-input-example',
  path: '/masked-input-example',
  getParentRoute: () => rootRouteImport,
} as any)
const FormExampleRoute = FormExampleRouteImport.update({
  id: '/form-example',
  path: '/form-example',
  getParentRoute: () => rootRouteImport,
} as any)
const DialogsExampleRoute = DialogsExampleRouteImport.update({
  id: '/dialogs-example',
  path: '/dialogs-example',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TabsExampleIndexRoute = TabsExampleIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TabsExampleRoute,
} as any)
const TabsExampleTab3Route = TabsExampleTab3RouteImport.update({
  id: '/tab3',
  path: '/tab3',
  getParentRoute: () => TabsExampleRoute,
} as any)
const TabsExampleTab2Route = TabsExampleTab2RouteImport.update({
  id: '/tab2',
  path: '/tab2',
  getParentRoute: () => TabsExampleRoute,
} as any)
const TabsExampleTab1Route = TabsExampleTab1RouteImport.update({
  id: '/tab1',
  path: '/tab1',
  getParentRoute: () => TabsExampleRoute,
} as any)
const TabsExampleTab3ListRoute = TabsExampleTab3ListRouteImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => TabsExampleTab3Route,
} as any)
const TabsExampleTab3IdRoute = TabsExampleTab3IdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => TabsExampleTab3Route,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dialogs-example': typeof DialogsExampleRoute
  '/form-example': typeof FormExampleRoute
  '/masked-input-example': typeof MaskedInputExampleRoute
  '/mrt-example': typeof MrtExampleRoute
  '/tabs-example': typeof TabsExampleRouteWithChildren
  '/tabs-example/tab1': typeof TabsExampleTab1Route
  '/tabs-example/tab2': typeof TabsExampleTab2Route
  '/tabs-example/tab3': typeof TabsExampleTab3RouteWithChildren
  '/tabs-example/': typeof TabsExampleIndexRoute
  '/tabs-example/tab3/$id': typeof TabsExampleTab3IdRoute
  '/tabs-example/tab3/list': typeof TabsExampleTab3ListRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dialogs-example': typeof DialogsExampleRoute
  '/form-example': typeof FormExampleRoute
  '/masked-input-example': typeof MaskedInputExampleRoute
  '/mrt-example': typeof MrtExampleRoute
  '/tabs-example/tab1': typeof TabsExampleTab1Route
  '/tabs-example/tab2': typeof TabsExampleTab2Route
  '/tabs-example/tab3': typeof TabsExampleTab3RouteWithChildren
  '/tabs-example': typeof TabsExampleIndexRoute
  '/tabs-example/tab3/$id': typeof TabsExampleTab3IdRoute
  '/tabs-example/tab3/list': typeof TabsExampleTab3ListRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dialogs-example': typeof DialogsExampleRoute
  '/form-example': typeof FormExampleRoute
  '/masked-input-example': typeof MaskedInputExampleRoute
  '/mrt-example': typeof MrtExampleRoute
  '/tabs-example': typeof TabsExampleRouteWithChildren
  '/tabs-example/tab1': typeof TabsExampleTab1Route
  '/tabs-example/tab2': typeof TabsExampleTab2Route
  '/tabs-example/tab3': typeof TabsExampleTab3RouteWithChildren
  '/tabs-example/': typeof TabsExampleIndexRoute
  '/tabs-example/tab3/$id': typeof TabsExampleTab3IdRoute
  '/tabs-example/tab3/list': typeof TabsExampleTab3ListRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dialogs-example'
    | '/form-example'
    | '/masked-input-example'
    | '/mrt-example'
    | '/tabs-example'
    | '/tabs-example/tab1'
    | '/tabs-example/tab2'
    | '/tabs-example/tab3'
    | '/tabs-example/'
    | '/tabs-example/tab3/$id'
    | '/tabs-example/tab3/list'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dialogs-example'
    | '/form-example'
    | '/masked-input-example'
    | '/mrt-example'
    | '/tabs-example/tab1'
    | '/tabs-example/tab2'
    | '/tabs-example/tab3'
    | '/tabs-example'
    | '/tabs-example/tab3/$id'
    | '/tabs-example/tab3/list'
  id:
    | '__root__'
    | '/'
    | '/dialogs-example'
    | '/form-example'
    | '/masked-input-example'
    | '/mrt-example'
    | '/tabs-example'
    | '/tabs-example/tab1'
    | '/tabs-example/tab2'
    | '/tabs-example/tab3'
    | '/tabs-example/'
    | '/tabs-example/tab3/$id'
    | '/tabs-example/tab3/list'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DialogsExampleRoute: typeof DialogsExampleRoute
  FormExampleRoute: typeof FormExampleRoute
  MaskedInputExampleRoute: typeof MaskedInputExampleRoute
  MrtExampleRoute: typeof MrtExampleRoute
  TabsExampleRoute: typeof TabsExampleRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tabs-example': {
      id: '/tabs-example'
      path: '/tabs-example'
      fullPath: '/tabs-example'
      preLoaderRoute: typeof TabsExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mrt-example': {
      id: '/mrt-example'
      path: '/mrt-example'
      fullPath: '/mrt-example'
      preLoaderRoute: typeof MrtExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/masked-input-example': {
      id: '/masked-input-example'
      path: '/masked-input-example'
      fullPath: '/masked-input-example'
      preLoaderRoute: typeof MaskedInputExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/form-example': {
      id: '/form-example'
      path: '/form-example'
      fullPath: '/form-example'
      preLoaderRoute: typeof FormExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dialogs-example': {
      id: '/dialogs-example'
      path: '/dialogs-example'
      fullPath: '/dialogs-example'
      preLoaderRoute: typeof DialogsExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tabs-example/': {
      id: '/tabs-example/'
      path: '/'
      fullPath: '/tabs-example/'
      preLoaderRoute: typeof TabsExampleIndexRouteImport
      parentRoute: typeof TabsExampleRoute
    }
    '/tabs-example/tab3': {
      id: '/tabs-example/tab3'
      path: '/tab3'
      fullPath: '/tabs-example/tab3'
      preLoaderRoute: typeof TabsExampleTab3RouteImport
      parentRoute: typeof TabsExampleRoute
    }
    '/tabs-example/tab2': {
      id: '/tabs-example/tab2'
      path: '/tab2'
      fullPath: '/tabs-example/tab2'
      preLoaderRoute: typeof TabsExampleTab2RouteImport
      parentRoute: typeof TabsExampleRoute
    }
    '/tabs-example/tab1': {
      id: '/tabs-example/tab1'
      path: '/tab1'
      fullPath: '/tabs-example/tab1'
      preLoaderRoute: typeof TabsExampleTab1RouteImport
      parentRoute: typeof TabsExampleRoute
    }
    '/tabs-example/tab3/list': {
      id: '/tabs-example/tab3/list'
      path: '/list'
      fullPath: '/tabs-example/tab3/list'
      preLoaderRoute: typeof TabsExampleTab3ListRouteImport
      parentRoute: typeof TabsExampleTab3Route
    }
    '/tabs-example/tab3/$id': {
      id: '/tabs-example/tab3/$id'
      path: '/$id'
      fullPath: '/tabs-example/tab3/$id'
      preLoaderRoute: typeof TabsExampleTab3IdRouteImport
      parentRoute: typeof TabsExampleTab3Route
    }
  }
}

interface TabsExampleTab3RouteChildren {
  TabsExampleTab3IdRoute: typeof TabsExampleTab3IdRoute
  TabsExampleTab3ListRoute: typeof TabsExampleTab3ListRoute
}

const TabsExampleTab3RouteChildren: TabsExampleTab3RouteChildren = {
  TabsExampleTab3IdRoute: TabsExampleTab3IdRoute,
  TabsExampleTab3ListRoute: TabsExampleTab3ListRoute,
}

const TabsExampleTab3RouteWithChildren = TabsExampleTab3Route._addFileChildren(
  TabsExampleTab3RouteChildren,
)

interface TabsExampleRouteChildren {
  TabsExampleTab1Route: typeof TabsExampleTab1Route
  TabsExampleTab2Route: typeof TabsExampleTab2Route
  TabsExampleTab3Route: typeof TabsExampleTab3RouteWithChildren
  TabsExampleIndexRoute: typeof TabsExampleIndexRoute
}

const TabsExampleRouteChildren: TabsExampleRouteChildren = {
  TabsExampleTab1Route: TabsExampleTab1Route,
  TabsExampleTab2Route: TabsExampleTab2Route,
  TabsExampleTab3Route: TabsExampleTab3RouteWithChildren,
  TabsExampleIndexRoute: TabsExampleIndexRoute,
}

const TabsExampleRouteWithChildren = TabsExampleRoute._addFileChildren(
  TabsExampleRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DialogsExampleRoute: DialogsExampleRoute,
  FormExampleRoute: FormExampleRoute,
  MaskedInputExampleRoute: MaskedInputExampleRoute,
  MrtExampleRoute: MrtExampleRoute,
  TabsExampleRoute: TabsExampleRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
